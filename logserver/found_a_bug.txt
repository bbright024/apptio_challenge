var logfile *os.File

func main() {


	if len(os.Args) > 1 {
		confFile, err := os.Open(os.Args[1])
		if err == nil && !os.IsNotExist(err) {
			defer confFile.Close()

			err = json.NewDecoder(confFile).Decode(&conf)
			fmt.Println(conf)
			if err != nil {
				log.Fatal(err)
			}
			
		} else if err != nil {
			log.Fatal(err)
		}
	}

	// wow, snapshot this situation. gets a runtime error, as err is undefined
	// but gets a compile time error because 'no new definitions on left side'
	// since err was assigned up top & the compiler can't tell the difference.
	// easy fix: call this second error err2
	//
	// ultimately it was a pointless situation; using a file as a global
	// doesn't work with scanner for some reason.  
	logfile, err = os.Open(conf.Dir + conf.Logfile)


	
